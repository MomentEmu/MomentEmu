# ===================================================================
#  Planck 2018 TT-only inference using the MomentEmu PolyCAMB emulator
# ===================================================================

output: chains/planck_polycamb          # folder for chains & logs
debug: True                            # enable for initial runs


# -------------------------------------------------------------------
#  Custom theory: replaces CAMB with PolyCAMB-D_ell surrogate
# -------------------------------------------------------------------
theory:
  my_polycamb:
    external: theory_polycamb.PolyCAMB
    path: /Users/zzhang/Workspace/MomentEmu
    
# -------------------------------------------------------------------
#  Planck 2018 likelihoods (TT low-ℓ + CamSpec high-ℓ)
#  High-ℓ range is capped at ℓ=2050 to match emulator training.
# -------------------------------------------------------------------
likelihood:
  planck_2018_lowl.TT: null
  planck_2018_highl_plik.TT:
    lmax: 2050
    requires:
      Cl: {TT: null}

# -------------------------------------------------------------------
#  Cosmological parameters and uniform (broad) priors
# -------------------------------------------------------------------
params:
  omega_b:
    prior: {min: 0.01, max: 0.024}
    latex: '\Omega_b h^2'

  omega_c:
    prior: {min: 0.09,  max: 0.15}
    latex: '\Omega_c h^2'

  H0:
    prior: {min: 55, max: 80}
    latex: 'H_0'

  logA:               # ln(10^{10} A_s)
    prior: {min: 2.7, max: 3.2}
    latex: '\ln(10^{10} A_s)'

  ns:
    prior: {min: 0.88, max: 1.02}
    latex: 'n_s'

  tau:
    prior: {min: 0.02, max: 0.12}
    latex: '\tau'


# -------------------------------------------------------------------
#  MCMC sampler settings
# -------------------------------------------------------------------
sampler:
  mcmc:
    max_samples: 100000        # Reduced for faster testing
    Rminus1_stop: 0.01
    covmat: auto
    burn_in: 0.2               # Adjusted burn-in
    proposal_scale: 2.0        # Tune if needed

# -------------------------------------------------------------------
#  Post-processing: GetDist corner plot and tables
# -------------------------------------------------------------------
post:
  getdist:
    params: [omega_b, omega_c, H0, ns, logA, tau, sigma8]
    contour: [0.68, 0.95]
